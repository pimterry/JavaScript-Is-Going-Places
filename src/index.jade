doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title JavaScript Is Going Places

    // build:css styles/styles.css
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    link(rel='stylesheet', type='text/css', href='styles/custom.css')
    // endbuild

  body
    article
      section
        h1 JavaScript Is Going Places

      section
        div(class='language')
          h2 Modern Language
        div(id='target')
          h2 Common Platform
        div(id='ecosystem')
          h2 Expanding Ecosystem

      section
        h2 ECMAScript 6
        em (Coming soon)
        
      section
        h2(class='code-aligned') Iterables
        ul
          li(class='codeAndLabel')
            label For-of
            pre
              code.language-javascript.
                for (var x of [1, 2, 3]) { ... }

          li(class='codeAndLabel')
            label Generators
            pre
              code.language-javascript.
                function* numbers(x = 0) {
                  while (true) { yield x++; }
                }

          li(class='codeAndLabel')
            label List & generator comprehensions
            pre
              code.language-javascript.
                evenNumbers = (x for (x of numbers)
                                 if x % 2 == 0)
          li(class='codeAndLabel')
            label Built-in set & map classes
            pre
              code.language-javascript.
                var uniqueValues = new Set([1, 2, 2, 3])    
                
      section
        h2(class='code-aligned') Structure
        ul
          li(class='codeAndLabel')
            label Modules
            pre
              code.language-javascript.
                module "myCoffeeMachine" {
                  import $ from "jquery"

                  export function () { ... }
                }

          li(class='codeAndLabel')
            label Classes
            pre
              code.language-javascript.
                class MyClass extends SuperClass {
                  constructor(a, b, c) { ... }
                  excitingMethod(x) { ...  }
                }

      section
        h2(class='code-aligned') Powerful new syntax
        ul
          li(class='codeAndLabel')
            label Function shorthand
            pre
              code.language-javascript.
                myFavFunction((x, y) => x * y);

          li(class='codeAndLabel')
            label Default arguments
            pre
              code.language-javascript.
                function (x = "default value") { }

          li(class='codeAndLabel')
            label Varargs
            pre
              code.language-javascript.
                function (a, b, ...others) { }

          li(class='codeAndLabel')
            label Destructuring
            pre
              code.language-javascript.
                var [a, b] = [b, a];
                var [x, y] = { x: 1, y: 2, other: 3 };

      section
        h2 Loads of other cool things
        ul(class='big-list')
          li Efficient binary data types
          li Binary and octal literals
          li Tail call optimisation
          li Structs
          li Constants
          li Weak maps
          li Function proxies
          li Multiline strings
          li String templating
          li Promises

      section
        h1 JavaScript as a Platform

      section
        ul
          li(class='codeAndLabel')
            label CoffeeScript
            pre
              code.language-javascript.
                sayHello = (name) ->
                  console.log("hello " + name)
          li(class='codeAndLabel')
            label TypeScript
            pre
              code.language-javascript.
                function sayHello(name: string) {
                  console.log("hello " + name);
                }
          li(class='codeAndLabel')
            label ClojureScript
            pre
              code.language-javascript.
                (defn sayHello [name]
                  .log js/console
                    (str "hello " name))
          li(class='codeAndLabel')
            label Dart
            pre
              code.language-javascript.
                void sayHello(String name) {
                    print("hello " + name);
                }

      section
        h2 JavaScript is pretty quick now
        br
        h4 Chrome's JS engine (V8) is approximately:
        br
        ul
          li 12x faster than Python
          li 10x faster than PHP
          li 6x faster than Ruby
          li The same as Clojure or Go
          li 1/2 the speed of Java or C#
          li 1/4 the speed of C++

        small
          | Data is the median result on x64 single-core machine for
          | the full set of language benchmarks from&nbsp;
          a(href='http://benchmarksgame.alioth.debian.org/') benchmarksgame.alioth.debian.org

      section
        h2 ASM.js

      section
        pre
          code.language-javascript.
            "use asm.js"

            var f64 = new global.Float64Array(heap);

            function vclamp(ret, v, len) {
              ret = ret|0;
              v = v|0;
              len = +len;

              if (+vdot(v, v) > len*len) {
                vnormalize(ret, v);
                vmult(ret, ret, len);
              } else {
                cpv(ret, +f64[v>>3], +f64[v+8>>3]);
              }
            }

      section
        h2 This is <em>blazing fast</em>

      section
        h2
          | This is a simple model of a computer

      section
        h1 The JavaScript Ecosystem

      section
        h2 Node.JS

      section
        h2 NPM

      section
        h2 Hardware

      section
        h2 NodeCopter
        pre
          code.language-javascript.
            var arDroneLibrary = require('ar-drone');
            var drone = arDroneLibrary.createClient();

      section(data-control-url='/takeoff')
        h2 NodeCopter, fly!
        pre
          code.language-javascript.
            drone.takeoff();

      section(data-control-url='/showoff')
        h2 NodeCopter, do things!
        pre
          code.language-javascript.
              drone.up(0.4);

              drone.after(1000, function () {
                  drone.stop();
                  drone.right(0.3);
              }).after(1000, function () {
                  drone.stop();
                  drone.left(0.3)
              }).after(1200, function () {
                  drone.stop();
              }).after(10000, function () {
                  drone.land();
              });

      section
        h2(class='code-aligned') NodeCopter, see!
        ul
          li(class='codeAndLabel')
            label Server-side
            pre
              code.language-javascript.
                require("dronestream").listen(8080);

          li(class='codeAndLabel')
            label Client-side
            pre
              code.language-javascript.
                new NodecopterStream($("#droneStream")[0],
                                     {'port': 8080});
        div(id='droneStream',width='640',height='300')

        script(src='/bower_components/jquery/jquery.js')
        script(src='/scripts/dronestream/nodecopter-client.js')
        script
          | new NodecopterStream($("#droneStream")[0],
          |                      {'port': 8080});

      section
        h2(id='manyJavaScripts')
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript
          | JavaScript

      section(class='sideBySideCode')
        pre
          code.language-javascript.
            // Client-side
            var server = "http://localhost:8001";

            deck.on('activate', function (event) {
              var slideData = $(event.slide).data();  
              if (slideData["controlUrl"]) {
                $.get(server + slideData["controlUrl"]);
              }
            });
            
            new NodecopterStream($("#droneStream")[0],
                                {'port': 8080});
          
        pre
          code.language-javascript.
            // Server-side
            var restify = require('restify');
            var drone = require('ar-drone').createClient();
            var server = restify.createServer();
            server.use(restify.CORS());

            server.get("/takeoff", function (req, res) {
              drone.takeoff();  
              res.send("OK");
            });

            server.get("/showoff", function (req, res) {  
              drone.up(0.4);

              drone.after(1000, function () {
                  drone.stop();
                  drone.right(0.3);
              }).after(1000, function () {
                  drone.stop();
                  drone.left(0.3)
              }).after(1200, function () {
                  drone.stop();
              }).after(10000, function () {
                  drone.land();
              });
              res.send("OK");
            });

            server.listen(8001);
            require("dronestream").listen(8080);

      section
        h2 Thanks!

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild
